{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"./types\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\"; // LOAD user for authenticaiton\n// we run loadUser inside of src/App.js\n\nexport const loadUser = () => async dispatch => {\n  // check to see if there is token\n  // if there is, then put it in global header\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/authFindNStudy\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = ({\n  firstName,\n  lastName,\n  username,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    firstName,\n    lastName,\n    username,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/usersFindNStudy\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      // look thru the array of errors\n      errors.forEach(error => dispatch(setAlert(error.msg), \"danger\"));\n    } // we do not need a payload. look in reducers/auth.js we don't take in a payload for case REGISTER_FAIL\n\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mandeeppabla/Desktop/test_sunday/2020-fall-cs160-team-BaSignSe/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","firstName","lastName","username","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,QAKO,SALP;AAMA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD;AACA;AACA,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AAED,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,qBAAV,CAAlB;AACAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,WADC;AAEPW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD;AACF,CAlBM,C,CAoBP;;AACA,OAAO,MAAMa,QAAQ,GAAG,CAAC;AACvBC,EAAAA,SADuB;AAEvBC,EAAAA,QAFuB;AAGvBC,EAAAA,QAHuB;AAIvBC,EAAAA,KAJuB;AAKvBC,EAAAA;AALuB,CAAD,KAMlB,MAAOd,QAAP,IAAoB;AACxB,QAAMe,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BT,IAAAA,SAD0B;AAE1BC,IAAAA,QAF0B;AAG1BC,IAAAA,QAH0B;AAI1BC,IAAAA,KAJ0B;AAK1BC,IAAAA;AAL0B,GAAf,CAAb;;AAQA,MAAI;AACF,UAAMX,GAAG,GAAG,MAAMX,KAAK,CAAC4B,IAAN,CAAW,sBAAX,EAAmCH,IAAnC,EAAyCF,MAAzC,CAAlB;AAEAf,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEZ,gBADC;AAEPa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAMa,MAAM,GAAGb,GAAG,CAACc,QAAJ,CAAaf,IAAb,CAAkBc,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACV;AACAA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWxB,QAAQ,CAACH,QAAQ,CAAC2B,KAAK,CAACC,GAAP,CAAT,EAAsB,QAAtB,CAAlC;AACD,KALW,CAOZ;;;AACAzB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAGD;AACF,CAxCM","sourcesContent":["import axios from \"axios\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n} from \"./types\";\nimport { setAlert } from \"./alert\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n// LOAD user for authenticaiton\n// we run loadUser inside of src/App.js\nexport const loadUser = () => async (dispatch) => {\n  // check to see if there is token\n  // if there is, then put it in global header\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/authFindNStudy\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = ({\n  firstName,\n  lastName,\n  username,\n  email,\n  password,\n}) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({\n    firstName,\n    lastName,\n    username,\n    email,\n    password,\n  });\n\n  try {\n    const res = await axios.post(\"/api/usersFindNStudy\", body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      // look thru the array of errors\n      errors.forEach((error) => dispatch(setAlert(error.msg), \"danger\"));\n    }\n\n    // we do not need a payload. look in reducers/auth.js we don't take in a payload for case REGISTER_FAIL\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}